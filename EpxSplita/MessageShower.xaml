<UserControl x:Class="EpxSplita.MessageShower" x:Name="window" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EpxSplita"
             mc:Ignorable="d" Grid.Row="1" Grid.RowSpan="2"
             d:DesignHeight="300" d:DesignWidth="330">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}" x:Key="NormalButtonStyle">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="#F4F4F4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFC4C4C4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="NotNormalButtonStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Background" Value="#3DA254"/>
            <!--3DA254 #FF40A6A6-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Opacity" Value="1"/>
                                <!--<Setter TargetName="border" Property="Background" Value="#FF40A6A6"/>-->
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#FF3D9595"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="StoryboardWinLoaded">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="messageBorder">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.9">
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="messageBorder" Duration="0:0:0.2" From="0.8" To="1">
            </DoubleAnimation>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="messageBorder">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.9">
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <!--<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="window">
                <EasingThicknessKeyFrame KeyTime="0:0:0" Value="0"/>
        		<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1,1,1,1"/>
        	</ThicknessAnimationUsingKeyFrames>-->
        </Storyboard>

        <RoutedUICommand x:Key="ClickCommand" Text="Text" />
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource StoryboardWinLoaded}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <UserControl.CommandBindings>
        <CommandBinding Command="{StaticResource ClickCommand}" 
                    Executed="CommandBinding_Executed" />
    </UserControl.CommandBindings>
    <UserControl.InputBindings>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{StaticResource ClickCommand}" />
    </UserControl.InputBindings>
    <Grid>
        <Canvas Background="LightGray" Opacity="0.4" MouseDown="Canvas_MouseDown">
            <!--<Canvas.Effect>
                <BlurEffect Radius="10" KernelType="Gaussian">

                </BlurEffect>
            </Canvas.Effect>-->
        </Canvas>
        <Border x:Name="messageBorder" BorderThickness="1" BorderBrush="Gray"  
                RenderTransformOrigin="0.5,0.5"
                HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
            <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Background="#F4F4F4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="48"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="titletb" Grid.Column="0" Margin="7,0" VerticalAlignment="Center"
                       ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                       FontWeight="Bold" FontSize="15"/>
                    <Button Grid.Column="1" Click="Button_Click" Style="{StaticResource NormalButtonStyle}">
                        <Canvas>
                            <Line X1="-4" Y1="-4" X2="4" Y2="4" Fill="White" Stroke="Black" StrokeThickness="0.7"/>
                            <Line X1="-4"  Y1="4"  X2="4" Y2="-4" Fill="White" Stroke="Black" StrokeThickness="0.7"/>
                        </Canvas>
                    </Button>
                </Grid>

                <Grid Grid.Row="1" Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="45"/>
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0" Width="300" VerticalAlignment="Center" Orientation="Horizontal">
                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Width="300">
                            <TextBlock x:Name="messagetb" Margin="7" TextAlignment="Left" TextWrapping="WrapWithOverflow" MaxWidth="300" 
                           ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                        </ScrollViewer>
                    </WrapPanel>
                    <WrapPanel Grid.Row="1" Orientation="Horizontal"  FlowDirection="RightToLeft" >
                        <!--<Button Content="Cancel" x:Name="CancelButton" Width="60" Height="25" Click="CancelButton_Click" Margin="10,10,10,0"
                            Style="{StaticResource NotNormalButtonStyle}"
                            Visibility="{Binding CancelButtonVisibility, Mode=OneWay}"/>
                <Button Content="No" x:Name="NoButton" Width="60" Height="25" Click="NoButton_Click" Margin="10,10,10,0"
                            Style="{StaticResource NotNormalButtonStyle}"
                            Visibility="{Binding NoButtonVisibility, Mode=OneWay}"/>
                <Button Content="Yes"  x:Name="YesButton" Width="60" Height="25" Click="YesButton_Click" Margin="10,10,10,0"
                            Style="{StaticResource NotNormalButtonStyle}"
                            Visibility="{Binding YesButtonVisibility, Mode=OneWay}"/>-->
                        <Button Content="OK" x:Name="OKButton" Width="60" Height="25" Command="{StaticResource ClickCommand}" Margin="10,10,10,0"
                            Style="{StaticResource NotNormalButtonStyle}">
                        </Button>
                        <!--  Visibility="{Binding OKButtonVisibility, Mode=OneWay}"-->
                    </WrapPanel>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
