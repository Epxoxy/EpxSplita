<win:BlankWindow x:Class="EpxSplita.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:win="http://GFramework.org"
                 xmlns:local="clr-namespace:EpxSplita"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:converters="clr-namespace:EpxSplita.Converters"
                 xmlns:ctlext="clr-namespace:EpxSplita.ControlsExtension"
                 xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                 xmlns:widget="http://encrypt5px.org"
                 xmlns:controls="clr-namespace:Controls;assembly=Controls"
                 mc:Ignorable="d"
                 BorderThickness="1" BorderBrush="Gray" Height="480" Width="700"
                 Title="EpxSplita" MinHeight="480" MinWidth="720" Icon="Themes/exicon.png">
    <win:BlankWindow.Resources>
        <local:GuetWebRequestViewModel x:Key="GuetViewModel" />
        <converters:Bool2Visibility x:Key="BoolToVisibility" />
        <converters:Bool2NotVisibility x:Key="BooToNotVisibility" />
        <converters:MultiToArrayConverter x:Key="MultiToArrayConverter" />
        <converters:ListBoxGroupConverter x:Key="ListBoxGroupConverter" SplitGroupName="szhxy" NormalGroupName="bkjw" />
        <ItemsPanelTemplate x:Key="horizontalItemsPanel">
            <WrapPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <Style x:Key="cellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"></EventSetter>
        </Style>
        <Style x:Key="horiItemsControl" TargetType="{x:Type ItemsControl}">
            <Setter Property="ItemsPanel" Value="{StaticResource horizontalItemsPanel}" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.BorderThickness" Value="0" />
                        <Setter Property="Control.Padding" Value="7" />
                        <Setter Property="Control.Margin" Value="2,4" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="processrectstyle" TargetType="{x:Type Rectangle}">
            <Style.Resources>
                <Storyboard x:Key="Logining">
                    <DoubleAnimation RepeatBehavior="Forever" From="0" To="300" Storyboard.TargetProperty="Width" Duration="0:0:6" />
                </Storyboard>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" Value="Gray" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Fill" Value="SkyBlue" />
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="LoginingBegin"  HandoffBehavior="SnapshotAndReplace" Storyboard="{StaticResource Logining}">
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard  BeginStoryboardName="LoginingBegin">
                        </StopStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GreenHeaderGroupItemStyle" TargetType="GroupItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupItem">
                        <Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Text="{Binding Path=Name}" FontSize="15" Foreground="DimGray" Padding="10,5" VerticalAlignment="Center"/>
                                <Border BorderBrush="LightGray" BorderThickness="0,0,0,1" Margin="10,0" HorizontalAlignment="Left" Width="40"/>
                                <ItemsPresenter Grid.Row="1"></ItemsPresenter>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GreenButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#3AA568" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="0.8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF3D9595"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </win:BlankWindow.Resources>
    <Grid x:Name="root" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Canvas Background="#f4f4f4" x:Name="PART_TitleBar" win:BlankWindow.Draggable="True">
            <WrapPanel Orientation="Horizontal" Canvas.Right="0" Height="30" >
                <widget:IconButton Canvas.Right="96" Width="48" Icon="&#xe6bf;" Template="{StaticResource TitleBarButton}" win:BlankWindow.Minimize="True" />
                <widget:IconButton Canvas.Right="48" x:Name="MaxBtn" Width="48" Template="{StaticResource TitleBarButton}" win:BlankWindow.Maximize="True" >
                    <widget:IconButton.Content>
                        <Grid>
                            <TextBlock x:Name="MaxBtnTB" Text="&#xe6e7;" Style="{StaticResource iconfont}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Rectangle Fill="Transparent" />
                        </Grid>
                    </widget:IconButton.Content>
                    <!--xe712-->
                </widget:IconButton>
                <widget:IconButton Canvas.Right="0" Width="48" Icon="&#xe6e1;" Template="{StaticResource WaringButton}" win:BlankWindow.Closeable="True" />
            </WrapPanel>
            <WrapPanel Orientation="Horizontal"  Height="30">
                <widget:IconButton Width="48" x:Name="BackBtn" Icon="&#xe604;" Visibility="Collapsed" Template="{StaticResource TitleBarButton}" />
                <TextBlock Margin="7" win:BlankWindow.Draggable="True" FontSize="12" Width="100" Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type win:BlankWindow}}}" />
            </WrapPanel>
        </Canvas>

        <Grid Grid.Row="1" DataContext="{StaticResource GuetViewModel}">
            <Grid x:Name="RootGrid">
                <Grid.Resources>
                    <CollectionViewSource x:Key="ListBoxGroup" Source="{Binding MenuItems}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription Converter="{StaticResource ListBoxGroupConverter}" />
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="121"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="42"/>
                </Grid.RowDefinitions>
                <ListBox Style="{StaticResource ListBoxStyle1}" 
                     x:Name="NavListBox"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     SelectionMode="Single"
                     IsSynchronizedWithCurrentItem="False"
                      Background="#FFF8F8F9"
                     ItemsSource="{Binding Source={StaticResource ListBoxGroup}}" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontSize="13" Padding="10,10" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical"></VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.GroupStyle>
                        <GroupStyle ContainerStyle="{StaticResource GreenHeaderGroupItemStyle}">
                        </GroupStyle>
                    </ListBox.GroupStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SetRequestCommand}" CommandParameter="{Binding SelectedItem, ElementName=NavListBox}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <WrapPanel Grid.Row="1" ItemWidth="40">
                    <widget:IconToggleButton x:Name="OpenResultBtn" Icon="&#xe606;" Style="{StaticResource IconFontColorToggleButton}"
                                     IsChecked="{Binding IsOpen, ElementName=ResultFlyout}">
                    </widget:IconToggleButton>
                    <widget:IconToggleButton x:Name="OpenLoginBtn" Icon="&#xe608;" Style="{StaticResource IconFontColorToggleButton}"
                                     IsChecked="{Binding IsOpen, ElementName=LoginFlyout}">
                    </widget:IconToggleButton>
                    <widget:IconToggleButton x:Name="OpenSettingBtn" Icon="&#xe602;" Style="{StaticResource IconFontColorToggleButton}"
                                     IsChecked="{Binding IsOpen, ElementName=SettingFlyout}">
                    </widget:IconToggleButton>
                </WrapPanel>
                <Border BorderBrush="LightGray" BorderThickness="0,0,1,0" Grid.RowSpan="2" />
                <DataGrid LoadingRow="OnDataGridLoadingRow" Grid.Column="1" BorderThickness="0" 
                      x:Name="datagrid" SelectionMode="Single" SelectionUnit="FullRow"
                      AlternationCount="2"  CanUserAddRows="False"
                      SelectedIndex="{Binding SelectedRowIndex}"
                      EnableRowVirtualization="True" EnableColumnVirtualization="True"
                      VerticalGridLinesBrush="#d6c79b" HorizontalGridLinesBrush="#d6c79b"
                      AutoGenerateColumns="True" ItemsSource="{Binding MyTable, IsAsync=True}" 
                      ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}"
                      RowHeaderStyle="{StaticResource DataGridRowHeaderStyle}"
                      CellStyle="{StaticResource cellStyle}" >
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}" >
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
                <ItemsControl Style="{StaticResource horiItemsControl}" Grid.Row="2" Grid.Column="2" Padding="2" Background="#f0f0f0">
                    <Button Content="Update" Command="{Binding RequestCommand}" CommandParameter="{Binding Items, ElementName=PostItems}" Padding="7" Margin="2,4" Style="{StaticResource GreenButtonStyle}"/>
                    <ItemsControl x:Name="PostItems" ItemsSource="{Binding PostList}" Padding="0" Margin="0" Visibility="{Binding IsHttpPost, Converter={StaticResource BoolToVisibility}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <widget:ComboBox
                                IsSynchronizedWithCurrentItem="True"
                                Margin="4" MinHeight="30" MinWidth="50" Style="{StaticResource PlaceHolderComboBoxStyle}"
                                DisplayMemberPath="Display" PopupPlacement="Top" PopupThickness="1,1,1,0"
                                SelectedValuePath="Value" ItemsSource="{Binding}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateSelectionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}" >
                                                <i:InvokeCommandAction.CommandParameter>
                                                    <MultiBinding Converter="{StaticResource MultiToArrayConverter}">
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type widget:ComboBox}}" Path="ItemsSource"/>
                                                        <Binding Path="SelectedValue" RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type widget:ComboBox}}"/>
                                                    </MultiBinding>
                                                </i:InvokeCommandAction.CommandParameter>
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </widget:ComboBox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <!--<widget:ComboBox MinWidth="120" Margin="4" IsEnabled="{Binding IsHttpPost}" x:Name="combobox3" 
                                 Style="{StaticResource PlaceHolderComboBoxStyle}" 
                                 DisplayMemberPath="Display" PopupPlacement="Top" PopupThickness="1,1,1,0"
                                 SelectedValuePath="Value" SelectedIndex="{Binding PostSelectedIndex}" ItemsSource="{Binding PostDataOption}">
                    </widget:ComboBox>-->
                    <Button Content="Request" Command="{Binding HandRequestCommand}" CommandParameter="{Binding SelectedItem, ElementName=datagrid}" Padding="7" Margin="2,4" Style="{StaticResource GreenButtonStyle}"/>
                </ItemsControl>
                <Rectangle Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="3" Fill="#FF58BB92" Width="0" IsEnabled="{Binding IsEnabled, ElementName=StopButton}" Style="{StaticResource processrectstyle}"/>
            </Grid>
            <controls:FlyoutControl x:Name="SettingFlyout" FadeInFrom="60" HorizontalContentAlignment="Right">
                <ItemsControl x:Name="settingPanel" Padding="15,8" HorizontalAlignment="Right" Height="{Binding ActualHeight, ElementName=LoginCanvas}" Width="300" Background="White" >
                    <TextBlock Height="40" Text="Setting" FontSize="20"/>
                    <ToggleButton Height="40" Content="Remember login user" IsChecked="{Binding RememberUser}" FontSize="14" Style="{StaticResource SliderToggleButton}" />
                    <ToggleButton Height="40" Content="Remember login fail user " IsChecked="{Binding RememberFailUser}" FontSize="14" Style="{StaticResource SliderToggleButton}" />
                    <ToggleButton Height="40" Content="Reapeat when request fail" IsChecked="{Binding IsAutoRepeat}" FontSize="14" Style="{StaticResource SliderToggleButton}" />
                    <ToggleButton Height="40" Content="Developer message tips" IsChecked="{Binding Developer}" FontSize="14" Style="{StaticResource SliderToggleButton}" />
                    <ToggleButton Height="40" Content="Isolate cookie for sigle request" IsChecked="False" FontSize="14" Style="{StaticResource SliderToggleButton}" />
                    <TextBlock Text="Repeat delay time" Margin="2,10,0,0" FontSize="14"/>
                    <widget:ComboBox Height="30" PopupThickness="1,0,1,1" PlaceHolder="Repeat delay time" Text="{Binding DelayTime, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" >
                        <ComboBoxItem Content="2000" />
                        <ComboBoxItem Content="3000" />
                        <ComboBoxItem Content="4000" />
                    </widget:ComboBox>
                    <TextBlock Text="Clear saved user" Margin="2,10,0,0" FontSize="14"/>
                    <widget:ComboBox PopupThickness="1,0,1,1" BorderThickness="1,1,1,0" PlaceHolder="User name" ItemsSource="{Binding UserNameList}" ></widget:ComboBox>
                    <widget:ComboBox MinWidth="60" x:Name="siteComboBox"
                                     Text="{Binding SiteName}"
                                     BorderThickness="1,0,1,0"
                                     ItemsSource="{Binding SiteList}"
                                     SelectedIndex="0"
                                     PopupPlacement="Bottom" PopupThickness="1,0,1,1">
                    </widget:ComboBox>
                    <Button x:Name="CleartButton" Content="Clear" Padding="4" Command="{Binding ClearUserCommand}" BorderBrush="#FFACACAC" BorderThickness="1,0,1,1"/>
                </ItemsControl>
            </controls:FlyoutControl>
            <controls:FlyoutControl x:Name="ResultFlyout" FadeInFrom="60" HorizontalContentAlignment="Right">
                <Grid>
                    <ScrollViewer Width="300" Padding="10,0,0,0" VerticalScrollBarVisibility="Visible" VirtualizingPanel.CacheLengthUnit="Page" 
                              VirtualizingPanel.VirtualizationMode="Recycling" CanContentScroll="True"
                              VirtualizingPanel.IsVirtualizing="True" HorizontalScrollBarVisibility="Disabled">
                        <TextBox BorderThickness="0" IsReadOnly="True" TextWrapping="WrapWithOverflow" Text="{Binding RequestResult, TargetNullValue='Request result here'}"/>
                    </ScrollViewer>
                </Grid>
            </controls:FlyoutControl>
            <controls:FlyoutControl x:Name="LoginFlyout" FadeInFrom="60" HorizontalContentAlignment="Right">
                <Grid Width="300" Background="White">
                    <ItemsControl Padding="20,10">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="FrameworkElement.Margin" Value="0,12" />
                                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <Grid>
                            <Ellipse Width="80" Height="80" Fill="LightGray"/>
                            <TextBlock Text="{Binding SelectedValue, ElementName=userlistbox, TargetNullValue='Empty'}" 
                                       Foreground="DimGray" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16"/>
                        </Grid>
                        <TextBlock Text="{Binding SelectedItem, ElementName=userlistbox, TargetNullValue='User name'}" FontSize="16"/>
                        <Canvas Width="180" Height="32">
                            <widget:Button Width="80" Height="32" Content="Logout" 
                                       Command="{Binding LogoutCommand}"
                                       CommandParameter="{Binding SelectedItem, ElementName=userlistbox}"/>
                            <widget:Button x:Name="OpenUserBtn" Content="Login" Width="80" Height="32" Canvas.Right="0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:ChangePropertyAction Value="True" PropertyName="IsOpen" TargetObject="{Binding ElementName=UserList}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </widget:Button>
                        </Canvas>
                        <ListBox x:Name="userlistbox" Style="{StaticResource ListBoxStyle1}" SelectedValuePath="Key" SelectedValue="{Binding SelectedKey}" ItemsSource="{Binding LoginList}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Padding="10,7">
                                        <!--<TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}, {1}">
                                                <Binding Path="Value" />
                                                <Binding Path="Key" />
                                            </MultiBinding>
                                        </TextBlock.Text>-->
                                        <Run Text="{Binding Path=Value, Mode=OneWay}"></Run>
                                        <Run Text="("></Run>
                                        <Run Foreground="DimGray" Text="{Binding Path=Key, Mode=OneWay}"></Run>
                                        <Run Text=")"></Run>
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ItemsControl>
                    <controls:FlyoutControl x:Name="UserList" FadeInFrom="60" VerticalContentAlignment="Bottom" OpenOrientation="Vertical">
                        <ItemsControl Background="#FFF8F8F9" Padding="20,0">
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="FrameworkElement.Margin" Value="0,7" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <Rectangle Fill="#FF58BB92" VerticalAlignment="Bottom" Height="2" Width="0" IsEnabled="{Binding IsEnabled, ElementName=StopButton}" Style="{StaticResource processrectstyle}"/>
                            <TextBlock Height="40" Text="Login" FontSize="20"/>
                            <widget:ComboBox MinWidth="60" x:Name="typeComboBox"
                                     Text="{Binding SiteName}"
                                     ItemsSource="{Binding SiteList}"
                                     SelectedIndex="0" Style="{StaticResource PlaceHolderComboBoxStyle}" 
                                     PopupPlacement="Bottom" PopupThickness="1,0,1,1">
                            </widget:ComboBox>
                            <Grid>
                                <Border CornerRadius="8,8,8,8" Background="White"></Border>
                                <ItemsControl  Padding="4,4,4,0">
                                    <widget:ComboBox IsEditable="True" Height="30"
                                             PlaceHolder="Enter user name" IsTextSearchEnabled="False"
                                             Text="{Binding UserName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnSourceUpdated=True}"
                                             BorderThickness="0"
                                             ItemsSource="{Binding UserNameList}">
                                    </widget:ComboBox>
                                    <PasswordBox x:Name="passwordBox" Tag="Enter password" 
                                         ctlext:PasswordBoxMonitor.LoadSaved="{Binding IsStoredUser}"
                                         ctlext:PasswordBoxMonitor.LoadKey="{Binding UserName}"
                                         ctlext:PasswordBoxMonitor.Keyword="{Binding Text, ElementName=typeComboBox}"
                                         Style="{StaticResource ForLoginPasswordboxStyle}"></PasswordBox>
                                </ItemsControl>
                            </Grid>
                            <CheckBox x:Name="rememberCheckBox" IsChecked="{Binding RememberUser}" VerticalAlignment="Center"  Content="Save user" Template="{DynamicResource CheckBoxControlTemplate2}" />
                            <ItemsControl ItemsPanel="{StaticResource horizontalItemsPanel}">
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="FrameworkElement.Margin" Value="0,0,20,0" />
                                        <Setter Property="FrameworkElement.Width" Value="60" />
                                        <Setter Property="FrameworkElement.Height" Value="30" />
                                        <Setter Property="BorderThickness" Value="0" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <Button x:Name="LoginButton" Content="Login" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=passwordBox}" />
                                <Button x:Name="StopButton" Content="Stop" IsEnabled="{Binding IsRequestRunning}" Command="{Binding StopRequestCommand}" />
                            </ItemsControl>
                            <ItemsControl Padding="0,7" BorderThickness="0,1,0,0" BorderBrush="#3DA254" >
                                <TextBlock TextWrapping="Wrap">
                            <Run FontSize="14" Foreground="DimGray" Text="Message console&#x0a;&#x0a;" />
                            <Run FontSize="13" Text="{Binding ConsoleMessage}"></Run>
                                </TextBlock>
                            </ItemsControl>
                        </ItemsControl>
                    </controls:FlyoutControl>
                </Grid>
            </controls:FlyoutControl>
        </Grid>
    </Grid>
</win:BlankWindow>